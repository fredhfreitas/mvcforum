@using MvcForum.Core
@using MvcForum.Core.Constants
@using MvcForum.Web.Application
@using MvcForum.Web.Application.ExtensionMethods
@model MvcForum.Web.ViewModels.Admin.MemberEditViewModel
@{
    ViewBag.Title = (Model.Id == Guid.Empty) ? "Add User" : "Edit User";
    var buttonText = (Model.Id == Guid.Empty) ? "Create" : "Save";
}

<div class="backbutton">
    <a href="@Url.Action("Manage")" class="btn-mvc-green">&lt;&lt; Back</a>
    <a href="@Url.Action("ManageUserPoints", new {id = Model.Id})" class="btn-mvc-green">Manage Users Points</a>
</div>

<div class="panel">
    <div class="panel-heading">
        <h5>@ViewBag.Title</h5>
    </div>
    <div class="panel-content">
        @using (Html.BeginForm("Edit", "Account", FormMethod.Post))
        {
            @Html.HiddenFor(x => Model.Id)

            @Html.ValidationSummary(false)


            <div class="form-group">
                @Html.LabelFor(x => x.UserName)
                @Html.TextBoxFor(x => x.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.UserName)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.PasswordQuestion)
                @Html.TextBoxFor(x => x.PasswordQuestion, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.PasswordQuestion)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.PasswordAnswer)
                @Html.TextBoxFor(x => x.PasswordAnswer, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.PasswordAnswer)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Email)
                @Html.TextBoxFor(x => x.Email, new { @class = "form-control", type = "email" })
                @Html.ValidationMessageFor(x => x.Email)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Age)
                @Html.TextBoxFor(x => x.Age, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Age)
            </div>

            <div class="row membereditavatar">
                <div class="col-sm-2">
                    <img src="@AppHelpers.MemberImage(Model.Avatar, Model.Email, Model.Id, ForumConfiguration.Instance.GravatarProfileSize)" class="img-responsive" alt="@Model.UserName">
                </div>
                <div class="col-sm-10">
                    <div class="form-group">
                        @Html.LabelFor(x => x.Avatar)
                        @Html.TextBoxFor(x => x.Avatar, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Avatar)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Location)
                @Html.TextBoxFor(x => x.Location, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Location)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Website)
                @Html.TextBoxFor(x => x.Website, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Website)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Twitter)
                @Html.TextBoxFor(x => x.Twitter, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Twitter)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Facebook)
                @Html.TextBoxFor(x => x.Facebook, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Facebook)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Cidade)
                @Html.TextBoxFor(x => x.Cidade, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Cidade)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Estado)
                @Html.TextBoxFor(x => x.Estado, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Estado)
            </div>

            <div class="form-group">
                <p>
                    @{string Empresário = ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldId("Empresário");}
                    @Html.RadioButtonFor(model => model.FuncaoEmpresario, "Empresário", new { id = Empresário, name = "imp_tx_tipo", value = "Empresário", @class = "with-gap" })
                    <label for="Empresário">Empresário</label>
                </p>
                <p>
                    @{string Operador = ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldId("Operador");}
                    @Html.RadioButtonFor(model => model.FuncaoOperador, "Operador", new { id = Operador, name = "imp_tx_tipo", value = "Operador", @class = "with-gap" })
                    <label for="Operador">Operador</label>
                </p>
                <p>
                    @{string Mecânico = ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldId("Mecânico");}
                    @Html.RadioButtonFor(model => model.FuncaoMecanico, "Mecânico", new { id = Mecânico, name = "imp_tx_tipo", value = "Mecânico", @class = "with-gap" })
                    <label for="Mecânico">Mecânico</label>
                </p>

                <div class="form-group">
                    Outro
                    @Html.TextBoxFor(x => Model.FuncaoOutro, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.FuncaoOutro)
                </div>


            </div>
            <h4>Dados da Retro:</h4>
            <div id="retro1">
                <div class="form-group">
                    Marca
                    @Html.TextBoxFor(x => Model.Marca1, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Marca1)
                </div>
                <div class="form-group">
                    Modelo
                    @Html.TextBoxFor(x => Model.Modelo1, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Modelo1)
                </div>
                <div class="form-group">
                    Ano de Fabricação
                    @Html.TextBoxFor(x => Model.AnoFabricacao1, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AnoFabricacao1)
                </div>
                <div class="form-group">
                    Empresa
                    @Html.TextBoxFor(x => Model.Empresa1, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Empresa1)
                </div>
            </div>

            <div id="retro2" style="display:none">
                <div class="form-group">
                    Marca
                    @Html.TextBoxFor(x => Model.Marca2, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Marca2)
                </div>
                <div class="form-group">
                    Modelo
                    @Html.TextBoxFor(x => Model.Modelo2, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Modelo2)
                </div>
                <div class="form-group">
                    Ano de Fabricação
                    @Html.TextBoxFor(x => Model.AnoFabricacao2, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AnoFabricacao2)
                </div>
                <div class="form-group">
                    Empresa
                    @Html.TextBoxFor(x => Model.Empresa2, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Empresa2)
                </div>
            </div>

            <div id="retro3" style="display:none">
                <div class="form-group">
                    Marca
                    @Html.TextBoxFor(x => Model.Marca3, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Marca3)
                </div>
                <div class="form-group">
                    Modelo
                    @Html.TextBoxFor(x => Model.Modelo3, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Modelo3)
                </div>
                <div class="form-group">
                    Ano de Fabricação
                    @Html.TextBoxFor(x => Model.AnoFabricacao3, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AnoFabricacao3)
                </div>
                <div class="form-group">
                    Empresa
                    @Html.TextBoxFor(x => Model.Empresa3, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Empresa3)
                </div>
            </div>

            <div id="retro4" style="display:none">
                <div class="form-group">
                    Marca
                    @Html.TextBoxFor(x => Model.Marca4, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Marca4)
                </div>
                <div class="form-group">
                    Modelo
                    @Html.TextBoxFor(x => Model.Modelo4, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Modelo4)
                </div>
                <div class="form-group">
                    Ano de Fabricação
                    @Html.TextBoxFor(x => Model.AnoFabricacao4, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AnoFabricacao4)
                </div>
                <div class="form-group">
                    Empresa
                    @Html.TextBoxFor(x => Model.Empresa4, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Empresa4)
                </div>
                <a href="#" class="btn btn-secondary" onclick="ShowItem(5, event);"><i class="fas fa-plus"></i> Adicionar outra retro</a>
            </div>

            <div id="retro5" style="display:none">
                <div class="form-group">
                    Marca
                    @Html.TextBoxFor(x => Model.Marca5, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Marca5)
                </div>
                <div class="form-group">
                    Modelo
                    @Html.TextBoxFor(x => Model.Modelo5, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Modelo5)
                </div>
                <div class="form-group">
                    Ano de Fabricação
                    @Html.TextBoxFor(x => Model.AnoFabricacao5, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.AnoFabricacao5)
                </div>
                <div class="form-group">
                    Empresa
                    @Html.TextBoxFor(x => Model.Empresa5, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Empresa5)
                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Signature)
                @Html.EditorFor(x => x.Signature)
                @Html.ValidationMessageFor(x => x.Signature)
            </div>

            <h2>Admin Specific</h2>

            <div class="checkbox">
                @using (Html.BeginLabelFor(m => m.IsTrustedUser, new { @class = "checkbox" }))
                {
                    @Html.CheckBoxFor(m => m.IsTrustedUser)
                }
                @Html.ValidationMessageFor(m => m.IsTrustedUser)
            </div>

            <div class="checkbox">
                @using (Html.BeginLabelFor(m => m.DisableEmailNotifications, new { @class = "checkbox" }))
                {
                    @Html.CheckBoxFor(m => m.DisableEmailNotifications)
                }
                @Html.ValidationMessageFor(m => m.DisableEmailNotifications)
            </div>

            <div class="checkbox">
                @using (Html.BeginLabelFor(m => m.DisablePosting, new { @class = "checkbox" }))
                {
                    @Html.CheckBoxFor(m => m.DisablePosting)
                }
                @Html.ValidationMessageFor(m => m.DisablePosting)
            </div>

            <div class="checkbox">
                @using (Html.BeginLabelFor(m => m.DisablePrivateMessages, new { @class = "checkbox" }))
                {
                    @Html.CheckBoxFor(m => m.DisablePrivateMessages)
                }
                @Html.ValidationMessageFor(m => m.DisablePrivateMessages)
            </div>

            <div class="checkbox">
                @using (Html.BeginLabelFor(m => m.DisableFileUploads, new { @class = "checkbox" }))
                {
                    @Html.CheckBoxFor(m => m.DisableFileUploads)
                }
                @Html.ValidationMessageFor(m => m.DisableFileUploads)
            </div>

            <div class="checkbox">
                @using (Html.BeginLabelFor(m => m.IsApproved, new { @class = "checkbox" }))
                {
                    @Html.CheckBoxFor(m => m.IsApproved)
                }
                @Html.ValidationMessageFor(m => m.IsApproved)
            </div>

            <div class="checkbox">
                @using (Html.BeginLabelFor(m => m.IsLockedOut, new { @class = "checkbox" }))
                {
                    @Html.CheckBoxFor(m => m.IsLockedOut)
                }
                @Html.ValidationMessageFor(m => m.IsLockedOut)
            </div>

            <div class="checkbox">
                @using (Html.BeginLabelFor(m => m.IsBanned, new { @class = "checkbox" }))
                {
                    @Html.CheckBoxFor(m => m.IsBanned)
                }
                @Html.ValidationMessageFor(m => m.IsBanned)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Comment)
                @Html.TextAreaFor(x => x.Comment, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Comment)
            </div>

            <div class="submit-holder">
                <input type="submit" class="btn-mvc-green" value="@(buttonText)" />
                @if (Model.Id != Guid.Empty)
                {
                    <a href="@Url.Action("Delete", new{Model.Id})" onclick="return confirm('Are you sure you want to delete @Model.UserName?')" class="btn-mvc-red" role="button">Delete</a>
                }
            </div>
        }

    </div>
</div>