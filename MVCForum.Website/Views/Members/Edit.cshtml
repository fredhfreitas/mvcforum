
@model MvcForum.Web.ViewModels.Member.MemberFrontEndEditViewModel

@{
    Layout = "~/Views/Shared/_LayoutDefault.cshtml";
    ViewBag.Title = Html.LanguageString("Members.EditProfile");
    var settings = Html.Settings();
}
@section Header
{
    <script type="text/javascript">
        $.ajax({
            url: app_base + 'Badge/ProfileBadgeCheck',
            type: 'POST',
            error: function (xhr, ajaxOptions, thrownError) {
                ShowUserMessage("Error: " + xhr.status + " " + thrownError);
            }
        });
        $(document).ready ( function () {
            $('.username-readonly').html($('#UserName').val());
        });
    </script>

}

<div>
    @*@{ @Html.Action("AllBadgesUser", "Badges"); }*@
    @Html.Action("AllBadgesUser", "Badge")
    @*@Html.Partial("~/Views/Badge/AllBadgesUser.cshtml")*@

</div>
<div class="row default-header">
    <div class="col-md-12">
        <h3 class="title-bar">@ViewBag.Title</h3>
    </div>
</div>
<div class="row">
    <div class="col-md-7">
        @using (Html.BeginForm("Edit", "Members", FormMethod.Post, new { enctype = "multipart/form-data", @class = "editmemberform" }))
        {
            @Html.HiddenFor(x => Model.Id)
            @Html.ValidationSummary(true)
            <fieldset>
                @if (!Model.DisableFileUploads)
                {
                    <div class="row membereditavatar">
                        <div class="col-md-4">
                            <img src="@AppHelpers.MemberImage(Model.Avatar, Model.Email, Model.Id, ForumConfiguration.Instance.GravatarProfileSize)" alt="@Model.UserName">
                        </div>
                        <div class="col-md-8">
                            <span class="username-readonly"></span>
                            @*@Html.LabelFor(x => x.Files)*@
                            <div class="input-group">
                                <input type="text" class="form-control" readonly="" placeholder="Editar foto do perfil">
                                <span class="input-group-btn">
                                    <span class="btn btn-default btn-file">
                                        @Html.LanguageString("Post.Browse") <input type="file" name="files" id="files" value="">
                                    </span>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(x => x.Files)
                        </div>
                    </div>
                }
                <p class="changepasswordtext">
                    @Html.Raw(string.Format(Html.LanguageString("Members.ChangePassword.Link"), string.Format("<a href=\"{0}\">{1}</a>", Url.Action("ChangePassword"), Html.LanguageString("Members.ChangePassword.Title"))))
                </p>
                <h4>Dados Pessoais:</h4>
                <div class="form-group">
                    @Html.LabelFor(x => x.UserName)
                    @Html.TextBoxFor(x => x.UserName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.UserName)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Email)
                    @Html.TextBoxFor(x => x.Email, new { @class = "form-control", type = "email" })
                    @Html.ValidationMessageFor(x => x.Email)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Age)
                    @Html.TextBoxFor(x => x.Age, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Age)
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(x => x.Location)
                        @Html.TextBoxFor(x => x.Location, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Location)
                    </div>*@

                @if (Model.AmountOfPoints >= settings.PointsAllowedForExtendedProfile)
                {
                    <div class="form-group">
                        @Html.LabelFor(x => x.Website)
                        @Html.TextBoxFor(x => x.Website, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Website)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Twitter)
                        @Html.TextBoxFor(x => x.Twitter, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Twitter)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Facebook)
                        @Html.TextBoxFor(x => x.Facebook, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Facebook)
                    </div>

                    if (settings.EnableSignatures)
                    {
                        <div class="form-group">
                            @Html.LabelFor(x => x.Signature)
                            @Html.TextAreaFor(x => x.Signature, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Signature)
                        </div>
                    }
                }

                <div class="form-group">
                    @Html.LabelFor(x => x.Cidade)
                    @Html.TextBoxFor(x => x.Cidade, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Cidade)
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Estado)
                    @Html.TextBoxFor(x => x.Estado, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Estado)
                </div>

                <div class="form-group">
                    <p>
                        @{string Empresário = ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldId("Empresário");}
                        @Html.RadioButtonFor(model => model.FuncaoEmpresario, "Empresário", new { id = Empresário, name = "imp_tx_tipo", value = "Empresário", @class = "with-gap" })
                        <label for="Empresário">Empresário</label>
                    </p>
                    <p>
                        @{string Operador = ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldId("Operador");}
                        @Html.RadioButtonFor(model => model.FuncaoOperador, "Operador", new { id = Operador, name = "imp_tx_tipo", value = "Operador", @class = "with-gap" })
                        <label for="Operador">Operador</label>
                    </p>
                    <p>
                        @{string Mecânico = ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldId("Mecânico");}
                        @Html.RadioButtonFor(model => model.FuncaoMecanico, "Mecânico", new { id = Mecânico, name = "imp_tx_tipo", value = "Mecânico", @class = "with-gap" })
                        <label for="Mecânico">Mecânico</label>
                    </p>

                    <div class="form-group">
                        Outro
                        @Html.TextBoxFor(x => Model.FuncaoOutro, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.FuncaoOutro)
                    </div>


                </div>
                <h4>Dados da Retro:</h4>
                <div id="retro1">
                    <div class="form-group">
                        Marca
                        @Html.TextBoxFor(x => Model.Marca1, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Marca1)
                    </div>
                    <div class="form-group">
                        Modelo
                        @Html.TextBoxFor(x => Model.Modelo1, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Modelo1)
                    </div>
                    <div class="form-group">
                        Ano de Fabricação
                        @Html.TextBoxFor(x => Model.AnoFabricacao1, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.AnoFabricacao1)
                    </div>
                    <div class="form-group">
                        Empresa
                        @Html.TextBoxFor(x => Model.Empresa1, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Empresa1)
                    </div>
                    <a href="#" class="btn btn-secondary" onclick="ShowItem(2, event);"><i class="fas fa-plus"></i> Adicionar outra retro</a>
                </div>

                <div id="retro2" style="display:none">
                    <div class="form-group">
                        Marca
                        @Html.TextBoxFor(x => Model.Marca2, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Marca2)
                    </div>
                    <div class="form-group">
                        Modelo
                        @Html.TextBoxFor(x => Model.Modelo2, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Modelo2)
                    </div>
                    <div class="form-group">
                        Ano de Fabricação
                        @Html.TextBoxFor(x => Model.AnoFabricacao2, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.AnoFabricacao2)
                    </div>
                    <div class="form-group">
                        Empresa
                        @Html.TextBoxFor(x => Model.Empresa2, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Empresa2)
                    </div>
                    <a href="#" class="btn btn-secondary" onclick="ShowItem(3, event);"><i class="fas fa-plus"></i> Adicionar outra retro</a>
                </div>

                <div id="retro3" style="display:none">
                    <div class="form-group">
                        Marca
                        @Html.TextBoxFor(x => Model.Marca3, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Marca3)
                    </div>
                    <div class="form-group">
                        Modelo
                        @Html.TextBoxFor(x => Model.Modelo3, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Modelo3)
                    </div>
                    <div class="form-group">
                        Ano de Fabricação
                        @Html.TextBoxFor(x => Model.AnoFabricacao3, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.AnoFabricacao3)
                    </div>
                    <div class="form-group">
                        Empresa
                        @Html.TextBoxFor(x => Model.Empresa3, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Empresa3)
                    </div>
                    <a href="#" class="btn btn-secondary" onclick="ShowItem(4, event);"><i class="fas fa-plus"></i> Adicionar outra retro</a>
                </div>

                <div id="retro4" style="display:none">
                    <div class="form-group">
                        Marca
                        @Html.TextBoxFor(x => Model.Marca4, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Marca4)
                    </div>
                    <div class="form-group">
                        Modelo
                        @Html.TextBoxFor(x => Model.Modelo4, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Modelo4)
                    </div>
                    <div class="form-group">
                        Ano de Fabricação
                        @Html.TextBoxFor(x => Model.AnoFabricacao4, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.AnoFabricacao4)
                    </div>
                    <div class="form-group">
                        Empresa
                        @Html.TextBoxFor(x => Model.Empresa4, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Empresa4)
                    </div>
                    <a href="#" class="btn btn-secondary" onclick="ShowItem(5, event);"><i class="fas fa-plus"></i> Adicionar outra retro</a>
                </div>

                <div id="retro5" style="display:none">
                    <div class="form-group">
                        Marca
                        @Html.TextBoxFor(x => Model.Marca5, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Marca5)
                    </div>
                    <div class="form-group">
                        Modelo
                        @Html.TextBoxFor(x => Model.Modelo5, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Modelo5)
                    </div>
                    <div class="form-group">
                        Ano de Fabricação
                        @Html.TextBoxFor(x => Model.AnoFabricacao5, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.AnoFabricacao5)
                    </div>
                    <div class="form-group">
                        Empresa
                        @Html.TextBoxFor(x => Model.Empresa5, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Empresa5)
                    </div>

                </div>

                <div class="checkbox">
                    @using (Html.BeginLabelFor(m => m.DisableEmailNotifications, new { @class = "checkbox" }))
                    {
                        @Html.CheckBoxFor(m => m.DisableEmailNotifications)
                    }
                    @Html.ValidationMessageFor(m => m.DisableEmailNotifications)
                </div>

                <div class="submit-holder">
                    <button type="submit" class="btn btn-primary">@Html.LanguageString("Buttons.Save")</button>
                </div>
            </fieldset>
        }
        <script>
            function ShowItem(item, e) {
                e.preventDefault();
                var x = document.getElementById("retro" + item);
                if (x.style.display === "none") {
                    x.style.display = "block";
                } else {
                    x.style.display = "none";
                }
            }
        </script>
    </div>

    <div class="col-md-4 col-md-offset-1">
        @Html.Action("GetActiveMembers", "Members")
    </div>
</div>